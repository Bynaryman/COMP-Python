/*
 * generated by Xtext 2.10.0
 */
package org.xtext.comp.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.comp.wh.Command
import org.xtext.comp.wh.Commands
import org.xtext.comp.wh.Definition
import org.xtext.comp.wh.Input
import org.xtext.comp.wh.Output
import org.xtext.comp.wh.Program
import org.xtext.comp.wh.impl.AffectImpl
import org.xtext.comp.wh.impl.NopImpl
import org.xtext.comp.wh.Exprs
import org.xtext.comp.wh.Vars

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class WhGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
			
	}
	
	def void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context, int indentAll, int indentIf) {
		//doGenerate(resource, fsa,  context)
		for (prog : resource.allContents.toIterable.filter(Program)) {
            	fsa.generateFile(prog.name + ".wh", prettyPrint(prog))
        	}
	}
	
	def prettyPrint(Program p) '''
            function «p.name» :
            «p.definition.prettyPrint»
        '''
    
    def prettyPrint(Input i) '''«IF i.vars.size > 1»«FOR v : 0..i.vars.size-2»«i.vars.get(v)», «ENDFOR»«ENDIF»«i.vars.get(i.vars.size -1 )»'''
      
    def prettyPrint(Output o) '''«IF o.vars.size > 1»«FOR v : 0..o.vars.size-2»«o.vars.get(v)», «ENDFOR»«ENDIF»«o.vars.get(o.vars.size -1 )»'''
          
    def prettyPrint(Definition d) ''' 
    	read «d.input.prettyPrint»
    	%
    	    «d.command.prettyPrint»
    	%
    	write «prettyPrint(d.input)»
    '''
    
    def prettyPrint( NopImpl n ) '''«n.nop»'''
    
    def prettyPrint( Exprs e ) {
    	return "expr !"
    }
    
    def prettyPrint(Vars v) {
    	return "var !"
    }
    
    def prettyPrint(AffectImpl a){
    	return a.vars.prettyPrint + ' := ' +  a.exp.prettyPrint;
    }
    
    // Impossible d'afficher une varaible dans les ''' ''' ...
    def prettyPrint(Command c, boolean isLast) {
		var res = ""
    	if( c.cmd instanceof NopImpl ) {
    		res+= (c.cmd as NopImpl).prettyPrint
       	} 
       	
       	if( c.cmd instanceof AffectImpl ) {
    		res+=(c.cmd as AffectImpl).prettyPrint
       	}
       	
       	if( !isLast ) {
       		res+=''';'''
       	}
       	
       	return res
    }
    
    def prettyPrint( Commands cmds)'''
    	«IF cmds.commands.size > 1»
	    	«FOR c : 0..cmds.commands.size-2»
	    	«cmds.commands.get(c).prettyPrint(false)»
	    	«ENDFOR»
    	«ENDIF»
    	«cmds.commands.get(cmds.commands.size -1 ).prettyPrint(true)»
    '''

}
