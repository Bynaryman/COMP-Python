/*
 * generated by Xtext 2.10.0
 */
package org.xtext.comp.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.comp.wh.Program
import org.xtext.comp.wh.Definition
import org.xtext.comp.wh.Commands
import org.xtext.comp.wh.Command

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class WhGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		// crée un fichier pour chaque programme
		// Les programmes sont "pretty printés"
		for (prog : resource.allContents.toIterable.filter(Program)) {
            	fsa.generateFile(prog.name + ".wh", prog.prettyPrint)
        	}

		
	}
	
	def prettyPrint(Program p) '''
            function «p.name» :
               «p.definition.prettyPrint»
        '''
        
    def prettyPrint(Definition d) ''' 
    	read «d.input»
    	%
    	    «d.command.prettyPrint»
    	%
    	write «d.output»
    '''
    
    def prettyPrint(Commands cmds)'''
		«FOR c : cmds.commands»
            «c.prettyPrint»;
        «ENDFOR»
    '''
    
    def prettyPrint(Command c)'''
    	«c.cmd»'''
}
